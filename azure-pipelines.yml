trigger:
  batch: "true"
  branches:
    include:
    - main
  paths:
    exclude:
      - README.md

pool:
  vmImage: "ubuntu-latest"

resources:
- repo: self

variables:
  tf_version: "0.15.3"

stages:
- stage: Dev_Deploy
  displayName: Terraform Deploy Dev
  jobs:
  - deployment: Dev_Deploy
    displayName: Deploy (Dev)
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: terraformInstaller@0
            displayName: "Install Terraform $(tf_version)"
            inputs:
              terraformVersion: $(tf_version)

          - task: TerraformTaskV1@0
            displayName: "Run terraform init"
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              backendServiceArm: 'sc-omes-demo-001'
              backendAzureRmResourceGroupName: 'rg-omes-demo-canadacentral-001'
              backendAzureRmStorageAccountName: 'stomestfdemoccl001'
              backendAzureRmContainerName: 'terraform'
              backendAzureRmKey: 'dev.terraform.tfstate'

          - task: TerraformTaskV1@0
            displayName: "Run terraform apply"
            inputs:
              provider: 'azurerm'
              command: "apply"
              commandOptions: "-input=false -no-color -auto-approve -var-file ./env/dev.tfvars"
              environmentServiceNameAzureRM: 'sc-omes-demo-001'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

- stage: Prod_Deploy
  displayName: Terraform Deploy Prod
  jobs:
  - deployment: Prod_Deploy
    displayName: Deploy (Prod)
    environment: Prod
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: terraformInstaller@0
            displayName: "Install Terraform $(tf_version)"
            inputs:
              terraformVersion: $(tf_version)

          - task: TerraformTaskV1@0
            displayName: "Run terraform init"
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              backendServiceArm: 'sc-omes-demo-001'
              backendAzureRmResourceGroupName: 'rg-omes-demo-canadacentral-001'
              backendAzureRmStorageAccountName: 'stomestfdemoccl001'
              backendAzureRmContainerName: 'terraform'
              backendAzureRmKey: 'prod.terraform.tfstate'

          - task: TerraformTaskV1@0
            displayName: "Run terraform apply"
            inputs:
              provider: 'azurerm'
              command: "apply"
              commandOptions: "-input=false -no-color -auto-approve -var-file ./env/prod.tfvars"
              environmentServiceNameAzureRM: 'sc-omes-demo-001'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
